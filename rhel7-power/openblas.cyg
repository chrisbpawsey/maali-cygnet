##############################################################################
# maali cygnet file for openblas
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version.
For further information see https://www.openblas.net

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://github.com/xianyi/OpenBLAS/archive/v0.2.20.tar.gz"


# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/v${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME_ORIG}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# tool pre-requisites
MAALI_TOOL_PREREQ="xlmass/8.1.5"

# for auto-building module files
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1

##############################################################################
function maali_build {
  # this is the core function for creating software
  
  # allows late evaluation
  MAALI_TOOL_CONFIGURE_EVAL=`eval echo "$MAALI_TOOL_CONFIGURE"`

  cd "$MAALI_TOOL_BUILD_DIR"

#
# set path for MAALI_XLMASS library 
#
  sed -e "s;#USE_MASS;USE_MASS;g" Makefile.power
  sed -e "s;/opt/ibm/xlmass/8.1.5/lib;${MAALI_XLMASS_HOME}/lib;g" Makefile.power
#
# set PREFIX path in Makefile.rule - install PREFIX = /path does on work
#
  sed -i -e "s;# PREFIX = /opt/OpenBLAS;PREFIX=$MAALI_INSTALL_DIR;g" Makefile.rule   

  maali_run "make -j ${MAALI_CORES}" 
  maali_run "make install" 
}
