##############################################################################
# MAALI config file for veclibs
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

POWER7, POWER8 and POWER9 processors support a wide range of vector instructions that can be accessed via built-in functions (also called intrinsic functions). For customers porting applications from other platforms, where the original source code included calls to built-in functions for those other platforms, the POWER vector built-ins can be challenging to map to typical vector functions such as those found in Open Source Software projects.

For further information see http://www.ibm.com/developerworks/community/groups/service/html/communityoverview?communityUuid=96022c38-953f-48bd-9da5-e59a41028c7e

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# MAALI_URL= URL to download the source code from
MAALI_URL="https://www.ibm.com "

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}.${MAALI_TOOL_VERSION}.tar"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}.${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  maali_makedir "$MAALI_INSTALL_DIR/include"
  maali_makedir "$MAALI_INSTALL_DIR/share/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"
  
  cd "$MAALI_TOOL_BUILD_DIR/include"
  
  maali_run "patch < ${MAALI_SRC}/patches/missing-includes.patch"
  maali_run "patch < ${MAALI_SRC}/patches/unaligned-load-store.patch"

  cd "$MAALI_TOOL_BUILD_DIR" 
  maali_run "cp -p include/*.h ${MAALI_INSTALL_DIR}/include/."
  maali_run "cp -p license/ILAN_Z125-5589-05_CT600ML.pdf ${MAALI_INSTALL_DIR}/share/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}/LICENSE.pdf"
  
}
